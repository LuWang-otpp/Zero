{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport history from './history';\nimport rootReducer from './modules';\nvar initialState = {};\nvar enhancers = [];\nvar middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  var devToolsExtension = window.devToolsExtension;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers));\nvar store = createStore(rootReducer, initialState, composedEnhancers);\nexport default store;","map":{"version":3,"sources":["/home/ziyang/Work/Zero/client/src/store.js"],"names":["createStore","applyMiddleware","compose","routerMiddleware","thunk","history","rootReducer","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","push","composedEnhancers","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAG,CAACL,KAAD,EAAQD,gBAAgB,CAACE,OAAD,CAAxB,CAAnB;;AAEA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAjC;;AAEA,MAAI,OAAOA,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CL,IAAAA,SAAS,CAACO,IAAV,CAAeF,iBAAiB,EAAhC;AACD;AACF;;AAED,IAAMG,iBAAiB,GAAGd,OAAO,MAAP,UACxBD,eAAe,MAAf,SAAmBQ,UAAnB,CADwB,SAErBD,SAFqB,EAA1B;AAKA,IAAMS,KAAK,GAAGjB,WAAW,CAACM,WAAD,EAAcC,YAAd,EAA4BS,iBAA5B,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport history from './history';\nimport rootReducer from './modules';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.devToolsExtension;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n);\n\nconst store = createStore(rootReducer, initialState, composedEnhancers);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}